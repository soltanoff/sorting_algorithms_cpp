#include "settings.h"


Array sortByCounting(Array array) {
    /*!
     * Сортировка подсчетом.
     * Суть: на каждом шаге подсчитывается в какую позицию результирующего массива result необходимо записать
     * очередной элемент исходного массива array.
     *
     * (#) Сохраняет порядок элементов с одинаковыми значениями
     *
     * Максимальная временная сложность: О(n^2)
     * Средняя временная сложность: О(n^2)
     * Минимальная временная сложность: О(n)
     *
     * Пространственная сложность: О(n)
     *
     * (#) Алгоритм устойчивой сортировки.
     * @param mass: исходный массив
     * @return array: упорядоченный исходный массив
     */
    std::int32_t n = (std::int32_t) array.size();
    Array result(n, 0);
    int k;

    for (auto i = 0; i < n; ++i) {
        // вычисляем положение элемента в рез. массиве
        k = 0;
        for (auto j = 0; j < n; ++j) {
            if ((array[j] < array[i]) || (array[j] == array[i] && j < i)) {
                ++k;
            }
        }
        // включаем очередной элемент в рез. массив
        result[k] = array[i];
    }
    return result;
}
