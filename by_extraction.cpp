#include "settings.h"


Array sortByExtraction(Array array) {
    /*!
     * Сортировка простым извлечением.
     * Суть: массив делится на две части - отсортированную и неотсортированную.
     * На каждом шаге извлекается максимальный элемент из неотсортированной части и
     * "включается" в отсортированную часть массива как минимальный элемент.
     *
     * Максимальная временная сложность: О(n^2)
     * Средняя временная сложность: О(n^2)
     * Минимальная временная сложность: О(n)
     *
     * Пространственная сложность: О(1)
     *
     * (#) Алгоритм НЕ устойчивой сортировки.
     * @param mass: исходный массив
     * @return array: упорядоченный исходный массив
     */
    std::int32_t n = (std::int32_t) array.size();
    std::int32_t max_index;

    for (auto i = n - 1; i >= 0; --i) {
        // ищем максимальный элемент в неотсортированной части
        max_index = 1;
        for (auto j = 0; j < (i + 1); ++j) {
            if (array[j] > array[max_index]) {
                max_index = j;
            }
        }
        // меняем найденный элемент с первым их отсортированных
        std::swap(array[i], array[max_index]);
    }
    return array;
}
